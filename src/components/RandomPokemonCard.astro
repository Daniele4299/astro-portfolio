---
import Card from "./Card/index.astro"; 
--- 

<Card colSpan="md:col-span-1" rowSpan="md:row-span-1">
  <div class="pokemon-card-container">
    <div class="flex items-center justify-center h-full relative">
      <div class="pokemon-card-content flex flex-col items-center justify-center h-full gap-4">
        <div class="pokemon-display text-center text-sm font-bold hidden flex items-center">
          <img class="pokemon-sprite w-24 h-24 mr-2 hidden" />
          <span class="pokemon-text"></span>
        </div>

        <div class="pokeball-buttons-container flex justify-center items-center gap-4">
          {Array.from({ length: 3 }, (_, index) => (
            <button class="pokeball-button" aria-label={`PokÃ©ball ${index + 1}`} />
          ))}
        </div>
      </div>

      <div class="fade-overlay fixed inset-0 bg-white opacity-0 pointer-events-none transition-opacity duration-500"></div>
    </div>
  </div>
</Card>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const starterPokemon = [
      "Bulbasaur", "Charmander", "Squirtle", "Chikorita", "Cyndaquil", "Totodile",
      "Treecko", "Torchic", "Mudkip", "Turtwig", "Chimchar", "Piplup",
      "Snivy", "Tepig", "Oshawott"
    ];

    const cards = document.querySelectorAll(".pokemon-card-container");

    cards.forEach(card => {
      const buttons = card.querySelectorAll(".pokeball-button");
      const pokemonDisplay = card.querySelector(".pokemon-display");
      const pokemonSprite = card.querySelector(".pokemon-sprite") as HTMLImageElement;
      const pokemonText = card.querySelector(".pokemon-text");
      const pokeballButtonsContainer = card.querySelector(".pokeball-buttons-container");
      const fadeOverlay = card.querySelector(".fade-overlay");

      buttons.forEach((button) => {
        button.addEventListener("click", () => {
          if (fadeOverlay) {
            fadeOverlay.classList.replace("opacity-0", "opacity-100");
            fadeOverlay.classList.remove("pointer-events-none");

            setTimeout(() => {
              const randomPokemon = starterPokemon[Math.floor(Math.random() * starterPokemon.length)];
              if (pokemonText) {
                pokemonText.textContent = `You caught a ${randomPokemon}!`;
              }

              if (pokemonSprite) {
                pokemonSprite.src = `https://img.pokemondb.net/sprites/black-white/normal/${randomPokemon.toLowerCase()}.png`;
                pokemonSprite.alt = randomPokemon;
                pokemonSprite.classList.remove("hidden");
              }

              if (pokemonDisplay) {
                pokemonDisplay.classList.remove("hidden");
              }

              if (pokeballButtonsContainer) {
                pokeballButtonsContainer.classList.add("hidden");
              }

              if (fadeOverlay) {
                fadeOverlay.classList.replace("opacity-100", "opacity-0");
                fadeOverlay.classList.add("pointer-events-none");
              }
            }, 500);
          }
        });
      });
    });
  });
</script>

<style>
  .pokeball-button {
    width: 60px;
    height: 60px;
    background: url('/pokeball_animation.gif') no-repeat center center;
    background-size: contain;
    border: none;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .pokeball-button:hover {
    transform: scale(1.1);
  }

  .hidden {
    display: none;
  }

  .fade-overlay {
    z-index: 10;
  }

  @media (max-width: 768px) {
    .pokemon-card-container {
      min-height: 100px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .pokeball-button {
      width: 80px;
      height: 80px;
    }
  }

  @media (min-width: 769px) {
    .pokemon-card-container {
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
  }
</style>
